name: deploy terraform
 on:
   pull_request:
      types: [closed]
      branches: ["main"]
 jobs:
   get_pr_label:
      if: github.event.pull_request.merged == true
      uses: ./.github/workflows/get-pullrequest-label.yml
      with:
        pr_number: ${{ github.event.number }}
   deploy:
      if: github.event.pull_request.merged == true
      needs: get_pr_label
      runs-on: ubuntu-latest
      strategy:
        matrix:
          envs: ${{ fromJson(needs.get_pr_label.outputs.pr_labels) }}
      permissions:
        id-token: write
        contents: write
        pull-requests: write
      env:
        env_accountid_mapping: '{"aws/environments/prod": "${{ secrets.AWS_PROD_ACCOUNT_ID }}", "aws/environments/dev": "${{ secrets.AWS_DEV_ACCOUNT_ID }}"}'
      steps:
        - name: checkout
          uses: actions/checkout@v4
        ##### Setup Terraform and AWS
        - name: Get Terraform Version
          id: tf_version
          # .terraform-versionから使用するバージョンを自動取得・設定
          run: |
             echo "value=$(cat .terraform-version)" >> $GITHUB_OUTPUT
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
             terraform_version: ${{ steps.tf_version.outputs.value }}
        - name: set deploy env aws account id
          id: aws_account_id
          env: # デプロイ先環境名に応じたAWSアカウントIDを設定する（後続のIAMRole参照に利用）
             ACCOUNT_ID: |-
               ${{ fromJSON(env.env_accountid_mapping)[matrix.envs] }}
          run: echo "value=$ACCOUNT_ID" >> "$GITHUB_OUTPUT"
        - name: Setup AWS auth
          uses: aws-actions/configure-aws-credentials@v4
          with:
             aws-region: "ap-northeast-1"
             role-to-assume: "arn:aws:iam::${{ secrets.AWS_TFSTATE_ACCOUNT_ID }}:role/rice01010101-terraform_basecode-ghact-oidc-role"
        ##### Execute Terraform and related tools command
        # Terraform
        - name: terraform init
          id: tf_init
          working-directory: ${{ matrix.envs }}
          run: terraform init -no-color
          continue-on-error: true
        - name: Re Setup AWS auth
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-region: "ap-northeast-1"
            role-to-assume: "arn:aws:iam::${{ steps.aws_account_id.outputs.value }}:role/rice01010101-terraform_basecode-ghact-oidc-role"
        - name: terraform apply
          id: tf_apply
          working-directory: ${{ matrix.envs }}
          run: terraform apply -no-color -auto-approve
          continue-on-error: true
        ##### Output command result to pullrequest comments
        - name: Sticky Pull Request Comment
          uses: marocchino/sticky-pull-request-comment@v2.9.0
          with:
             header: ${{ matrix.envs }} Terraform Apply Result
             number: ${{ github.event.number }}
             message: |
               # <span id="terraform-apply-${{ matrix.envs }}">${{ matrix.envs }} 環境</span>
               ## Apply
               ### Result
               ${{ steps.tf_apply.outcome }}
               ### Output
               #### stdout: 
 
               ``` 
               ${{ steps.tf_apply.outputs.stdout }}
               ``` 
 
               #### stderr: 
 
               ``` 
               ${{ steps.tf_apply.outputs.stderr }}
