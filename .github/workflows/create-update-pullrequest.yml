name: create or update pull request
on:
  push:
    branches:
      - "feature/**"
jobs:
  CreatePullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Reset promotion branch
        run: |
          git fetch origin ${{ github.ref_name }}:${{ github.ref_name }}
          git reset --hard ${{ github.ref_name }}
      - id: create_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          # github app tokenを使用しているのはこの処理中に発生したイベントで他のworkflow(prのイベント起点)を走らせたいから。Github Tokenを使用するとGithub Actionsの仕様上、PRのイベントを取れない。PATでも代用可能だが一々ローテート必須なのは個人的に論外。
          # 参考：https://github.com/peter-evans/create-pull-request/issues/48
          token: ${{ steps.create_token.outputs.token }}
          branch: ${{ github.ref_name }}
          title: main <- ${{ github.ref_name }}
          body: |
            # プルリクエストについて
            このプルリクエストは「feature/**」ブランチへのpushを起点にGithubActionsによって自動的に作成されています。
            プルリクエスト本文とラベル付、コメントは自動化されており、レビューもreviewdogによって一部自動化しています。
            ただし、最終的に責任を持つのはレビュー者である前提で作っており、その負担を軽減するためにコメントや自動レビューを補助として用意しています。
            レビューの結果、問題ないようであれば通常通り File changed > Review changed から Approve してください。
            その後のマージ・デプロイは自動的に処理します。デプロイ（Apply）の出力あるいはエラーはコメントとして自動的に投稿されます。

            # ラベルについて
            ラベルはTerraformプロバイダー毎のデプロイする環境を識別するために使用しています。（そのためラベル名はPathを表現している）
            そのため、GithubActionsで行うほとんどの処理は付与されているラベルに応じて実行しています。
            通常はActionsが変更されたファイルパスに応じて自動的にラベルを付与しますが、人間が必要に応じて付け外しできる余地を残しているので、必要に応じて操作してください。

            # コメントについて
            自動的に投稿しているコメントは、 terraform においては init, validate, plan で、設定の静的セキュリティスキャンとして trivy の実行結果もカスタマイズして出力しています。
            また、各コメントは種類が同じであれば都度作成するのではなく同じコメントを更新するようにしています。
            レビューの補助・参考として必要に応じて確認してください。

            # 自動レビューについて
            人間のレビューにおける負担の軽減策として、reviewdogによってtflintとtrivyのレビューを自動化しています。
            基本的に File Changed 内にBotがレビューを残していますが、全ての結果がレビューとして出力されている訳ではない（例えばファイルがないものなどはレビューとして残せない）ので、あくまで人間のレビューでの補助の補助程度で考えてください。
            （reviewdog側で不可解な動作をしているように見受けられ、期待する出力が出ないことがあるのも理由の一つ）
            この自動レビュー結果にだけ依存して人間がレビューすることは避けてください。
            reviewdogによるレビュー結果の正確な一覧は Checks タブから確認できます。

            # デプロイについて
            ラベルの方にも記載していますが、付与されているラベルに応じてTerraformプロバイダー毎の各環境にデプロイします。
            複数の環境にデプロイしたいのであればそれに応じたラベルを複数付与し Approve すれば順次デプロイされます。

            # プロバイダー毎、環境毎のページ内リンク（コメントが存在しない場合は遷移しません）
            ## AWS
            ### Test環境
            - [terraform init](#terraform-init-aws/test)
            - [terraform validate](#terraform-validate-aws/test)
            - [terraform plan](#terraform-plan-aws/test)
            - [trivy](#trivy-result-aws/test)

          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}
      - name: auto labeling
        id: labeling
        uses: actions/labeler@v5
        with:
          pr-number: ${{ steps.cpr.outputs.pull-request-number }}
          sync-labels: true
          configuration-path: .github/labeler.yml
