name: comment to pullrequest
on:
  pull_request:
    types: [opened, edited, synchronize, labeled, unlabeled]
jobs:
  get_pr_label:
    uses: ./.github/workflows/get-pullrequest-label.yml
    with:
      pr_number: ${{ github.event.number }}
  comment_to_pr:
    runs-on: ubuntu-latest
    needs: get_pr_label
    strategy:
      matrix:
        envs: ${{ fromJson(needs.get_pr_label.outputs.pr_labels) }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    env:
      # job matrix毎の処理中環境に対応したアカウントIDを取得するためのJSON
      env_accountid_mapping: '{"prod": "${{ secrets.AWS_PROD_ACCOUNT_ID }}", "dev": "${{ secrets.AWS_DEV_ACCOUNT_ID }}"}'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      ##### Setup Terraform and AWS
      - name: Get Terraform Version
        id: tf_version
        # .terraform-versionから使用するバージョンを自動取得・設定
        run: |
          echo "value=$(cat .terraform-version)" >> $GITHUB_OUTPUT
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.tf_version.outputs.value }}
      - name: set deploy env aws account id
        id: aws_account_id
        env: # デプロイ先環境名に応じたAWSアカウントIDを設定する（後続のIAMRole参照に利用）
          ACCOUNT_ID: |-
            ${{ fromJSON(env.env_accountid_mapping)[matrix.envs] }}
        run: echo "value=$ACCOUNT_ID" >> "$GITHUB_OUTPUT"
      - name: Setup AWS auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: "arn:aws:iam::${{ secrets.AWS_TFSTATE_ACCOUNT_ID }}:role/rice01010101-terraform_basecode-ghact-oidc-role"
      ##### Execute Terraform and related tools command
      # Terraform 
      - name: terraform init
        id: tf_init
        working-directory: ${{ matrix.envs }}
        run: terraform init -no-color
        continue-on-error: true
      - name: Re Setup AWS auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: "arn:aws:iam::${{ steps.aws_account_id.outputs.value }}:role/rice01010101-terraform_basecode-ghact-oidc-role"
      - name: terraform validate
        id: tf_validate
        working-directory: ${{ matrix.envs }}
        run: terraform validate -no-color
        continue-on-error: true
      - name: terraform plan
        id: tf_plan
        working-directory: ${{ matrix.envs }}
        run: terraform plan -no-color
        continue-on-error: true
      # Trivy
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: ${{ matrix.envs }}
          trivyignores: .trivyignore
          format: template
          template: "@.github/trivy-template.tpl"
          severity: "HIGH,CRITICAL"
          output: "trivy-result.txt"
      - run: |
          sed -i '1i## Trivy Security Scan Result' trivy-result.txt
          sed -i '1i# <span id="trivy-result-${{ matrix.envs }}">${{ matrix.envs }} 環境</span>' trivy-result.txt
      ##### Output command result to pullrequest comments
      - name: Sticky Pull Request Comment
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: ${{ matrix.envs }} Terraform Init Result
          number: ${{ github.event.number }}
          message: |
            # <span id="terraform-init-${{ matrix.envs }}">${{ matrix.envs }} 環境</span>
            ## Init
            ### Result
            ${{ steps.tf_init.outcome }}
            ### Output
            #### stdout: 

            ``` 
            ${{ steps.tf_init.outputs.stdout }}
            ``` 

            #### stderr: 

            ``` 
            ${{ steps.tf_init.outputs.stderr }}
            ```

      - uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: ${{ matrix.envs }} Terraform Validate Result
          number: ${{ github.event.number }}
          message: |
            # <span id="terraform-validate-${{ matrix.envs }}">${{ matrix.envs }} 環境</span>
            ## Validate
            ### Result
            ${{ steps.tf_validate.outcome }}
            ### Output
            #### stdout:

            ``` 
            ${{ steps.tf_validate.outputs.stdout }}
            ``` 

            #### stderr:

            ``` 
            ${{ steps.tf_validate.outputs.stderr }}
            ```

      - uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: ${{ matrix.envs }} Terraform Plan Result
          number: ${{ github.event.number }}
          message: |
            # <span id="terraform-plan-${{ matrix.envs }}">${{ matrix.envs }} 環境</span>
            ## Plan
            ### Result
            ${{ steps.tf_plan.outcome }}
            ### Output
            #### stdout: 

            ``` 
            ${{ steps.tf_plan.outputs.stdout }}  
            ``` 

            #### stderr:

            ``` 
            ${{ steps.tf_plan.outputs.stderr }}
            ```

      - uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: ${{ matrix.envs }} Trivy Scan Result
          number: ${{ github.event.number }}
          path: trivy-result.txt